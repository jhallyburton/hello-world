%%PS-Adobe
% C:\gs>C:\gs\gs8.57\bin\gswin32.exe "-Ic:\gs\gs8.57\lib;c:\gs\fonts;c:\gs\gs8.57\Resource" -dBATCH -dNOPAUSE -sDEVICE=jpeggray -sOutputFile=C:\gs\Klondike.jpg c:\ps\KLondike.ps
%
% This classic puzzle was first published over 100 years ago.
% 
% This file was posted with a CTRL-D (\004) at the end.
% Your printer may or may not like this.
% 
% ----------------- klondike.ps -----------------

%%DocumentFonts Times-Roman Times-Italic
% but you can change those right here:

/plain  /Times-Roman  def  % Change these as required
/italic /Times-Italic def  %  ...

/in {72 mul} def        % An inch
/lm 1.5 in def			% left margin
/rm 1.5 in def			% right margin
/n 21 def			% number of rows and columns (fixed)
/pw 8.5 in def			% page width
/uw pw lm sub rm sub def	% usable width
/ss uw n div def		% square size
currentlinewidth 2 div setlinewidth % aesthetics
/lw currentlinewidth def	% line width
/ssm ss lw sub def		% square size minus linewidth

/bm 11 in n ss mul sub 2 div def % bottom margin

0 .3 in translate  % oops

/puzzle (\
         477         \
      544833463      \
    1451114517135    \
   494967555876685   \
  37298356739187585  \
  14784292711822763  \
 7218553113133428613 \
 4267252422543281773 \
 4165111914344319827 \
435232232425351135537\
271511315332423775427\
252261244634121265188\
 4375193445294195748 \
 4167834341312323624 \
 7326153923215758954 \
  16734811121228941  \
  25478756135787293  \
   656467252263474   \
    2312333213211    \
      744573447      \
         334         ) def


%
% Title. The word "KlondikE" was generated by Adobe TypeAlign (R)
%

gsave

0.3 setgray

-2 888 translate .4 -.3 scale

/b { bind def } bind def
/p {
 transform
 0.25 sub round 0.25 add exch
 0.25 sub round 0.25 add exch
 itransform
}
b
/m { p moveto } b
/l { p lineto } b
/c { p curveto } b
/s /stroke load def
/f /fill load def
/u {} b
/U {} b
/k
/setcmykcolor where
{
 /setcmykcolor get
}
{
 {
  1 sub 4 1 roll
  3
   {
    3 index add neg dup 0 lt
    {
     pop 0
    }
    if
    3 1 roll
   }
  repeat
  setrgbcolor pop
 }
 bind
}
ifelse
def
/K /k load def

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
459.451 794.258 m
455.908 785.162 448.822 766.969 445.279 757.873 c
447.166 757.661 450.939 757.273 452.826 757.080 c
446.943 741.608 435.178 710.671 429.294 695.200 c
414.439 695.974 384.789 697.851 369.969 698.989 c
377.175 715.180 391.585 747.556 398.791 763.747 c
401.951 763.309 408.269 762.434 411.428 762.021 c
422.932 788.763 445.936 842.243 457.440 868.985 c
454.799 869.680 449.520 871.088 446.880 871.793 c
454.618 889.178 470.091 923.944 477.827 941.324 c
487.673 937.585 507.379 930.144 517.354 926.764 c
511.038 910.156 498.405 876.936 492.088 860.323 c
490.504 860.685 487.336 861.409 485.752 861.779 c
483.327 855.553 478.474 843.095 476.049 836.869 c
477.006 832.628 479.017 824.225 480.069 820.048 c
486.453 829.454 498.942 848.109 505.047 857.360 c
503.679 857.673 500.943 858.298 499.575 858.611 c
505.663 875.095 517.835 908.060 523.921 924.540 c
533.706 921.224 553.433 915.079 563.334 912.122 c
558.607 896.382 549.151 864.898 544.422 849.153 c
542.245 849.585 537.891 850.449 535.714 850.881 c
524.813 833.814 501.977 799.119 490.055 781.565 c
492.432 774.168 497.525 759.686 500.229 752.532 c
503.156 752.289 509.010 751.805 511.937 751.562 c
507.460 736.861 498.508 707.462 494.032 692.760 c
480.282 693.164 452.798 694.148 439.072 694.762 c
444.741 710.114 456.077 740.813 461.745 756.164 c
463.632 755.971 467.406 755.584 469.293 755.390 c
466.579 764.962 461.659 784.389 459.451 794.258 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
585.364 853.330 m
575.768 812.912 556.575 732.069 546.980 691.651 c
536.603 691.830 515.849 692.187 505.485 692.423 c
508.334 702.237 514.033 721.865 516.883 731.679 c
519.367 731.523 524.337 731.235 526.828 731.113 c
535.597 762.748 553.132 826.013 561.900 857.643 c
559.897 858.011 555.917 858.844 553.930 859.269 c
557.648 872.077 565.084 897.687 568.802 910.489 c
577.657 908.003 595.469 903.397 604.375 901.095 c
601.626 888.788 596.126 864.172 593.376 851.862 c
591.373 852.228 587.367 852.962 585.364 853.330 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
644.517 831.437 m
645.768 841.289 644.643 846.285 638.581 847.039 c
632.522 847.809 630.333 843.193 628.778 833.219 c
627.358 824.103 624.516 805.871 623.096 796.755 c
621.542 786.782 622.413 781.801 629.267 781.348 c
636.123 780.906 638.690 785.565 639.941 795.417 c
641.085 804.422 643.373 822.432 644.517 831.437 c
671.125 852.806 m
669.530 832.981 666.339 793.327 664.744 773.502 c
662.721 748.360 651.618 737.360 623.166 738.311 c
594.770 739.504 587.343 751.880 592.629 778.372 c
596.798 799.262 605.136 841.045 609.304 861.935 c
614.591 888.427 624.235 898.761 645.285 894.325 c
666.465 890.553 673.148 877.947 671.125 852.806 c
671.125 852.806 671.125 852.806 671.125 852.806 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
688.252 885.465 m
696.712 884.357 713.684 882.625 722.188 881.923 c
722.482 870.701 723.071 848.253 723.366 837.028 c
722.123 837.102 719.638 837.251 718.395 837.325 c
718.592 825.073 718.987 800.567 719.184 788.316 c
719.331 779.159 721.389 774.246 727.986 774.022 c
735.243 773.774 736.674 778.269 736.226 787.647 c
735.643 799.834 734.477 824.211 733.894 836.398 c
732.724 836.468 730.385 836.608 729.215 836.678 c
728.787 847.881 727.931 870.284 727.502 881.484 c
735.946 880.904 752.871 880.410 761.334 880.163 c
762.606 869.023 765.150 846.738 766.423 835.593 c
764.371 835.642 760.268 835.738 758.216 835.787 c
759.869 818.830 763.173 784.916 764.826 767.963 c
766.959 746.066 763.083 735.187 742.959 735.351 c
732.023 735.553 724.863 740.004 718.438 749.035 c
718.477 746.206 718.554 740.548 718.593 737.719 c
709.188 737.852 690.398 738.260 681.010 738.526 c
681.526 748.993 682.558 769.927 683.073 780.390 c
685.358 780.271 689.926 780.033 692.210 779.915 c
692.697 794.689 693.670 824.239 694.157 839.014 c
692.117 839.203 688.039 839.580 686.000 839.769 c
686.563 851.195 687.689 874.043 688.252 885.465 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
811.685 873.204 m
811.180 875.506 810.170 880.105 809.665 882.403 c
817.042 882.977 831.733 884.759 839.078 885.651 c
842.302 874.170 848.750 851.205 851.975 839.721 c
849.934 839.548 845.852 839.203 843.811 839.030 c
853.700 801.799 873.480 727.327 883.369 690.096 c
872.849 690.065 851.801 690.079 841.273 690.128 c
839.515 698.756 836.000 716.011 834.243 724.639 c
836.755 724.654 841.781 724.685 844.294 724.700 c
843.046 730.381 840.551 741.743 839.304 747.425 c
835.375 741.410 829.579 738.910 820.816 738.788 c
798.369 738.719 791.567 749.689 788.411 772.146 c
785.698 791.458 780.271 830.086 777.557 849.402 c
774.478 871.319 776.654 882.381 791.776 882.942 c
799.189 883.516 805.486 880.436 811.685 873.204 c
811.685 873.204 811.685 873.204 811.685 873.204 c
822.257 825.056 m
820.178 834.526 817.712 839.045 811.301 838.708 c
804.889 838.366 804.589 833.735 806.372 824.322 c
808.002 815.718 811.261 798.510 812.891 789.906 c
814.674 780.492 816.854 775.957 824.081 776.146 c
831.307 776.325 831.939 780.964 829.860 790.434 c
827.959 799.090 824.158 816.401 822.257 825.056 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
909.129 725.929 m
916.555 726.143 931.408 726.570 938.822 726.850 c
942.088 717.779 948.619 699.637 951.885 690.565 c
944.035 690.456 928.320 690.327 920.462 690.261 c
917.629 699.178 911.962 717.012 909.129 725.929 c
896.364 844.785 m
905.805 818.561 924.686 766.117 934.127 739.892 c
924.417 739.460 904.969 738.745 895.245 738.388 c
892.032 748.988 885.606 770.187 882.394 780.783 c
884.673 780.933 889.231 781.233 891.510 781.383 c
886.706 796.501 877.099 826.737 872.296 841.855 c
870.264 841.620 866.199 841.150 864.167 840.915 c
860.660 852.486 853.647 875.624 850.141 887.191 c
859.285 888.683 877.556 891.772 886.637 893.611 c
891.090 881.700 899.996 857.872 904.450 845.957 c
902.429 845.664 898.386 845.078 896.364 844.785 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
962.722 810.702 m
975.784 780.963 1001.909 721.484 1014.972 691.745 c
1004.490 691.502 983.519 691.050 973.024 690.882 c
969.464 700.072 962.344 718.453 958.785 727.643 c
961.285 727.742 966.285 727.946 968.786 728.049 c
956.736 758.113 932.639 818.237 920.591 848.297 c
918.569 848.003 914.526 847.416 912.504 847.123 c
907.859 859.116 898.570 883.099 893.926 895.088 c
902.288 896.782 918.901 900.680 927.197 902.675 c
932.727 890.300 943.789 865.546 949.322 853.166 c
948.102 852.955 945.661 852.532 944.441 852.320 c
946.029 848.705 949.207 841.471 950.794 837.856 c
953.759 835.791 959.741 831.636 962.758 829.546 c
962.200 835.890 960.935 848.653 960.218 855.113 c
959.006 854.868 956.570 854.426 955.350 854.213 c
949.672 866.658 938.317 891.544 932.641 903.984 c
941.272 906.280 958.486 911.058 967.084 913.478 c
973.706 900.577 986.951 874.771 993.575 861.865 c
991.301 861.377 986.739 860.458 984.457 859.998 c
986.272 847.442 989.355 822.599 990.623 810.311 c
996.889 806.112 1009.625 797.613 1016.094 793.313 c
1019.072 793.678 1025.026 794.409 1027.998 794.799 c
1034.063 782.981 1046.199 759.337 1052.267 747.515 c
1041.404 746.655 1019.671 744.980 1008.803 744.147 c
1003.544 755.573 993.026 778.424 987.769 789.846 c
989.058 789.996 991.633 790.312 992.921 790.470 c
985.235 795.533 970.128 805.684 962.722 810.702 c
f

%1.000 1.000 1.000 0.000 k
%1.000 1.000 1.000 0.000 K
974.340 915.759 m
992.909 921.597 1029.662 934.421 1047.798 941.489 c
1063.461 916.739 1094.787 867.240 1110.450 842.490 c
1103.014 840.799 1088.142 837.442 1080.664 835.903 c
1076.332 843.146 1067.662 857.641 1063.329 864.883 c
1059.237 863.896 1051.051 861.922 1046.958 860.935 c
1052.195 851.864 1062.668 833.723 1067.905 824.652 c
1074.731 825.958 1088.383 828.572 1095.183 829.948 c
1099.186 823.381 1107.190 810.248 1111.193 803.682 c
1104.082 802.480 1089.815 800.197 1082.682 799.055 c
1088.574 788.849 1100.356 768.441 1106.248 758.234 c
1111.130 758.796 1120.895 759.921 1125.777 760.483 c
1120.755 768.880 1110.706 785.679 1105.683 794.076 c
1113.713 795.314 1129.704 798.047 1137.700 799.431 c
1153.362 774.681 1184.688 725.181 1200.351 700.432 c
1172.973 698.485 1118.094 695.431 1090.607 694.215 c
1082.839 709.017 1067.306 738.616 1059.538 753.417 c
1062.719 753.728 1069.081 754.349 1072.261 754.659 c
1058.798 779.616 1031.872 829.523 1018.408 854.480 c
1015.731 853.908 1010.377 852.764 1007.700 852.193 c
999.359 868.087 982.679 899.870 974.340 915.759 c
f

grestore

2 in 10 in moveto 0.5 setgray
plain findfont [22.4 0 0 16 0 0] makefont setfont
(The centennial edition of Sam Loyd's) show

2 in 9.5 in moveto 0.3 setgray
plain findfont [59 0 0 18 0 0] makefont setfont
(Back from the) show

plain findfont setfont

%
% Figure out how much to scale the font to occupy 38% of the width
%
/widfac 0.38 def			% width factor
/sm 1 widfac sub 2 div ss mul def	% margin within square
/fsf ss (6) stringwidth pop div 
  widfac mul def		% font scale factor

currentfont fsf scalefont setfont	% set it

0.5 setgray   % For 300 dpi printers, may want to make this closer to 0
              % It's set this shade to match newspaper looks. Plus,
			  %  darker shading is more of a strain on my eyes.
2 setlinecap

0 1 n 1 sub			% loop over columns
{
  /y exch def
  0 1 n 1 sub			% loop over rows
  {
    /x exch def			% x-position
    /x0 x ss mul lm add def	% x-coordinate of lower left of square
    /y0 n 1 sub y sub ss mul
    bm add def  % y-coordinate of lower left of square

    /char puzzle y n mul x add get def   % character for this position
	/stchr 1 string def stchr 0 char put % character as a string
    stchr ( ) ne	% blank (show nothing) ?
    {
      x y add 2 mod 0 eq	% plain (eq) or reverse (ne)?
      {
        x0 lw 2 div add y0 lw 2 div add moveto
        0 ssm rlineto ssm 0 rlineto 
        0 ssm neg rlineto ssm neg 0 rlineto stroke
        x0 sm add y0 sm add lw sub moveto stchr show
      }
      {
        gsave x0 y0 moveto
        0 ss rlineto ss 0 rlineto 0 ss neg rlineto ss neg 0 rlineto fill
        1 setgray x0 sm add y0 sm add lw sub moveto stchr show grestore
      } ifelse
    } if % nonblank
  } for
} for

%
% Now the heart in the middle. Thanks to Art Hyatt for teaching
%  me this wayyy back when LBJ was president.
%

ss 10.5 mul lm add     ss 10.5 mul bm add lw sub  moveto

/r ss 0.35 mul def	% radius
gsave
currentpoint translate
newpath r r 0.75 mul moveto
3 3 360
{
  dup cos r mul		% theta r*cos(theta)
  dup abs 0.75 mul	% theta r*cos(theta) 0.75*r*abs(cos(theta))
  3 -1 roll sin r mul   % r*cos(theta) 0.75*r*abs(cos(theta)) sin(theta)
  add lineto
} for
gsave stroke grestore
fill
grestore

    /x0 10 ss mul lm add def	% x-coordinate of lower left of square
    /y0 n 1 sub 10 sub ss mul
    bm add def	% y-coordinate of lower left of square

    gsave	% repeat the 3 in the heart in the middle in reverse video
    1 setgray x0 sm add y0 sm add lw sub moveto (3) show 
    grestore

0 setgray
/lh 12 def		% text line height
/y0 bm lh 2 mul sub def	% y-position for directions

/showline % Justify a line inside uw units
{
  dup length 0 ne
  {
    dup dup stringwidth pop		% (abc) (abc) 51.2
    uw exch sub				% (abc) (abc) 22.6
    exch length				% (abc) 22.6 3
    div 0				% (abc) 7.53 0
    3 -1 roll				% 7.53 0 (abc)
    ashow 
  } if

  /y0 y0 lh sub def lm y0 moveto
} def

/fs 11.7 def
plain findfont fs scalefont setfont 
lm y0 moveto

% \252 = open double quote, \272 = close double quote.

(\252Start from that heart in the center and go three steps in a
straight line in any one) showline (of the eight directions,
north, south, east or west, or on the bias, as the ladies say,)
showline (northeast, northwest, southeast or southwest. When you
have gone three steps in) showline (a straight line, you will
reach a square with a number on it, which indicates the) showline
(second day's journey, as many steps as it tells, in a straight
line in any of the eight) showline (directions. From this new
point when reached, march on again according to the number)
showline (indicated, and continue on, following the requirements
of the numbers reached,) showline (until you come upon a square
with a number which will carry you just one step beyond) showline
(the border, when you are supposed to be out of the woods and can
holler all you want,) showline (as you will have solved the
puzzle.\272) show

() showline () showline

(First printed in the ) show
italic findfont fs scalefont setfont 
(New York Journal and Advertiser, ) show
plain findfont fs scalefont setfont 
(April 24, 1898) show

() showline () showline

/smaller 0.75 def
currentfont smaller scalefont setfont
(Original puzzle by Sam Loyd with corrigendum by Greene, Mitchell and Greene.) show
% A few years back in SciAM, I think.

() showline

% Create font "foo" to be the plain font plus a copyright symbol at
%  octal 251. I'm not sure this is 100% kosher but what do I know?
% This file is for amusement, not training :-)
% (All this stuff is here at the end in case it fails on some printers).

/fn /foo def
/newfont plain findfont maxlength dict def
plain findfont 
{exch dup /FID ne
  {dup /Encoding eq
    {exch dup length array copy newfont 3 1 roll put} 
    {exch newfont 3 1 roll put} ifelse
  }{pop pop} ifelse
} forall
newfont /FontName fn put
newfont /Encoding get 8#251 /copyright put
fn newfont definefont pop

fn findfont fs smaller mul 0.9 mul scalefont setfont

% Tested on many printers; apologies if it fails on yours or otherwise violates PS rules.
% Looks best at 600 dpi or better.

showpage

